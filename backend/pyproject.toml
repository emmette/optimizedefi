[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "optimizedefi-backend"
version = "0.1.0"
description = "AI-Powered DeFi Portfolio Manager Backend API"
# readme = "README.md"  # Uncomment when README.md is added
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "OptimizeDeFi Team"},
]
keywords = ["defi", "portfolio", "optimization", "1inch", "fastapi"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.0",
    "aiohttp>=3.9.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "websockets>=12.0",
    "langchain>=0.1.0",
    "langgraph>=0.0.20",
    "openai>=1.0.0",
    "scikit-learn>=1.3.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "httpx>=0.25.0",
    "eth-account>=0.10.0",
    "web3>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]

# Scripts are typically defined as shell commands in Docker
# [project.scripts]
# start = "uvicorn app.main:app --host 0.0.0.0 --port 8000"
# dev = "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-ra --strict-markers --cov=app --cov-report=term-missing"
asyncio_mode = "auto"